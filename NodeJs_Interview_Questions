1. Browser Vs NodeJS
2. If Node.js is single-threaded, how does it handle concurrency.
3. Event Loop and Asynchronous Programming
4. Module Systems
5. synchronous and asynchronous error handling
6. process.nextTick() and setImmediate()
7. What is an EventEmitter 
8. package.json vs package-lock.json
9. ChildProcess Module
  spawn() vs fork()
  Cluster Module
10. piping in Node.js
   retrieve data from one stream and pass output to another stream
11. middleware in Node.js, custom authentication middleware
12. Libuv
13. Streams 
14. WebSocket communication 
15. HTTP status 401  vs 403
16. What is a webhook
17. How to obtain the IP address of the user in Node.js (request.socket.remoteAddress)
18. redis
19. CORS
20. What is clustering in Node.js, and how can it be used to improve application performance
21. GRAPHQL
22. Provide some example of config file separation for dev and prod environments
23. What are some common security vulnerabilities in Node.js applications, and how can you mitigate them
23. Swagger
24. Memory Leaks: How would you detect and debug a memory leak in a Node.js application?
25. Concurrency & Scaling : load balancing, and how would you implement it in a Node.js app
26. What are some strategies to optimize the performance of a Node.js application
27. How can you implement API rate limiting in a Node.js application
https://intellipaat.com/blog/interview-question/node-js-interview-questions/#Advanced_Node_JS_Interview_Questions_6_to_10_Years_Experience


ExpressJS
=========
1. middleware concept in Express.js
2. How do you handle form-data & file-upload in expressJS
2. body-parser
3. folder structure
4. authentication & authorization


MongoDB
=======
1. Sharding in MongoDB
2. can we have index on array field(ensureIndex())
3. ACID
4. How to perform join in mongodb ($lookup)
5. covered query
6. index cardinality
7. BSON vs JSON
8. What is the purpose of an ObjectId in MongoDB? How is it generated?
9. difference between findOne() and find()
10. How do you perform a case-insensitive search in MongoDB
11. indexing in MongoDB, and why is it important
12. aggregation pipelines vs. map-reduce in MongoDB
13. What are the limitations of MongoDB transactions compared to traditional RDBMS transactions
14. How would you troubleshoot slow write operations in MongoDB
15. How do you handle data validation and sanitization when interacting with MongoDB
16. 


NestJS
=======
https://www.vskills.in/interview-questions/nestjs-interview-questions
